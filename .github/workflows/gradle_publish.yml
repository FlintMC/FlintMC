name: Java CI with Gradle

on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache flint-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches/flint-gradle
          key: jdk-8-flint-gradle-${{ hashFiles('build.gradle.kts') }}
          restore-keys : |
            jdk-8-flint-gradle-

      - name: Get tag name
        id: get_tag_name
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build with Gradle
        run: ./gradlew build -x javadoc -x test --full-stacktrace

      - name: Run unit tests
        run: ./gradlew test

      - name: Build Javadocs
        run: ./gradlew javadoc

      - name: Publish to distributor
        run: ./gradlew publish --full-stacktrace
        env:
          VERSION: ${{ steps.get_tag_name.outputs.VERSION }}
          FLINT_DISTRIBUTOR_PUBLISH_TOKEN: ${{ secrets.FLINT_DISTRIBUTOR_PUBLISH_TOKEN }}
          FLINT_DISTRIBUTOR_URL: ${{ secrets.FLINT_DISTRIBUTOR_URL }}
          FLINT_DISTRIBUTOR_AUTHORIZATION: ${{ secrets.FLINT_DISTRIBUTOR_AUTHORIZATION }}

      - name: Publish Javadocs
        working-directory: docs/generated
        run: |
          set -e
          echo "Zipping javadocs..."
          zip -r docs.zip *
          echo "Uploading..."
          upload_resp_and_code=$(curl -X POST -F "secret=${FLINT_JAVADOCS_PUBLISH_TOKEN}" -F "subdirectory=framework" -F "zip=@docs.zip" "${FLINT_JAVADOCS_URL}" -w "%{http_code}")

          upload_resp=$(echo "${upload_resp_and_code}" | head -n -1)
          status_code=$(echo "${upload_resp_and_code}" | tail -n 1 -c 4)

          if [[ $status_code -eq 200 ]]; then
            echo "Upload succeeded (${status_code}):"
            echo "${upload_resp}"
            exit 0
          else
            echo "Upload failed (${status_code}):"
            echo "${upload_resp}"
            exit 1
          fi

        env:
          FLINT_JAVADOCS_URL: ${{ secrets.FLINT_JAVADOCS_URL }}
          FLINT_JAVADOCS_PUBLISH_TOKEN: ${{ secrets.FLINT_JAVADOCS_PUBLISH_TOKEN }}
